{"version":3,"sources":["components/Header.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Body","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","json","totalVisits","username","password","authMessage","data","visitWeek","visitMonth","vWidth","reverseOrder","handlePasswordChange","bind","assertThisInitialized","handleUsernameChange","handleSubmit","_this2","setState","window","innerWidth","fetch","then","res","reverse","length","processMetrics","catch","err","console","log","i","currWeek","moment","events","timestamp","format","currMonth","insertVisitTime","j","eventType","eventName","substring","indexOf","insertEvent","sort","b","y","push","x","array","time","_this3","map","item","index","Card","bg","style","width","key","height","padding","Accordion","Toggle","as","Button","variant","eventKey","toString","Badge","sessionId","Collapse","ListGroup","renderEvents","es","margin","bottom","xType","tickLabelAngle","newDate","eventArray","split","eventTarget","Item","e","_this4","preventDefault","authObj","method","headers","Content-Type","body","JSON","stringify","status","localStorage","setItem","target","value","Form","onSubmit","Group","controlId","Control","placeholder","onChange","type","Text","_this5","getItem","Tabs","defaultActiveKey","Tab","title","onClick","renderReverseButton","renderMetricsCards","Title","renderChart","renderVisitsByMonth","renderVisitsByWeek","renderAuth","App","components_Header","components_Body","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0aefacd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-content\">\r\n        <h1>Site Metrics</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Accordion, Card, ListGroup, Button, Form, Tabs, Tab, Badge } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { XYPlot, VerticalBarSeries, VerticalGridLines, HorizontalGridLines,\r\n  YAxis, XAxis, LineMarkSeries } from 'react-vis';\r\nimport '../App.css';\r\n\r\nclass Body extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      json: null,\r\n      totalVisits: 0,\r\n      username: '',\r\n      password: '',\r\n      authMessage: '',\r\n      data: [],\r\n      visitWeek: [],\r\n      visitMonth: [],\r\n      vWidth: 0,\r\n      reverseOrder: false,\r\n    }\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.reverseOrder = this.reverseOrder.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({vWidth: window.innerWidth});\r\n    fetch('https://ec2.kevnchoi.com/analytics')\r\n    .then(res => res.json())\r\n    .then(res => this.setState({ json: res.reverse(), totalVisits: res.length }))\r\n    .then(() => this.processMetrics())\r\n    .catch(err => console.log('Error: ' + err));\r\n  }\r\n\r\n  processMetrics() {\r\n    const { json } = this.state;\r\n\r\n    const data = [];\r\n    const visitWeek = [];\r\n    const visitMonth = [];\r\n\r\n    for (let i = 0; i < json.length; i++) {\r\n\r\n      const currWeek = moment(json[i].events[0].timestamp).format(\"W/YY\");\r\n      const currMonth = moment(json[i].events[0].timestamp).format(\"M/YY\");\r\n      this.insertVisitTime(visitWeek, currWeek);\r\n      this.insertVisitTime(visitMonth, currMonth);\r\n\r\n      const events = json[i].events;\r\n      for (let j = 0; j < events.length; j++) {\r\n        const eventType = events[j].eventType;\r\n        const eventName = eventType.substring(eventType.indexOf('=') + 1);\r\n        this.insertEvent(data, eventName);\r\n      }\r\n    }\r\n\r\n    data.sort((a, b) => b.y - a.y);\r\n    this.setState({\r\n      data: data,\r\n      visitWeek: visitWeek.reverse(),\r\n      visitMonth: visitMonth.reverse()\r\n    });\r\n  }\r\n\r\n  insertEvent(data, eventType) {\r\n    if (eventType === 'sessionStart') { return; }\r\n    if (data.length === 0) {\r\n      data.push({\r\n        x: eventType,\r\n        y: 1\r\n      })\r\n    } else {\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].x === eventType) {\r\n          data[i].y = data[i].y + 1;\r\n          return;\r\n        }\r\n      }\r\n      data.push({\r\n        x: eventType,\r\n        y: 1\r\n      })\r\n    }\r\n  }\r\n\r\n  insertVisitTime(array, time) {\r\n    if (array.length === 0) {\r\n      array.push({\r\n        x: time,\r\n        y: 1\r\n      })\r\n    } else {\r\n      for (let i = 0; i < array.length; i++) {\r\n        if (array[i].x === time) {\r\n          array[i].y = array[i].y + 1;\r\n          return\r\n        }\r\n      }\r\n      array.push({\r\n        x: time,\r\n        y: 1\r\n      })\r\n    }\r\n  }\r\n\r\n  reverseOrder() {\r\n    this.setState({\r\n      json: this.state.json.reverse(),\r\n      reverseOrder: !this.state.reverseOrder\r\n    });\r\n  }\r\n\r\n  renderReverseButton() {\r\n    return this.state.reverseOrder ?\r\n      ( <div>&#x21a5;</div> ) : ( <div>&#x21a7;</div> )\r\n  }\r\n\r\n  renderMetricsCards() {\r\n    if (!this.state.json) {\r\n      return null;\r\n    }\r\n    return this.state.json.map((item, index) => {\r\n      return (\r\n        <Card bg=\"light\" style={{ width: '60vw' }} key={index}>\r\n          <Card.Header className=\"header\" style={{ height: '36px', padding: '2px 4px' }}>\r\n            <Accordion.Toggle style={{ padding: '2px' }} as={Button} variant=\"link\" eventKey={index.toString()}>\r\n              <Badge variant=\"primary\" className=\"event-count\">{item.events.length}</Badge>\r\n              {moment(item.events[0].timestamp).format(\"M/D/YY LT\")}\r\n            </Accordion.Toggle>\r\n            <div className=\"time\">{item.sessionId}</div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey={index.toString()}>\r\n            <ListGroup>{this.renderEvents(item.events)}</ListGroup>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderChart() {\r\n    if (!this.state.json) {\r\n      return null;\r\n    }\r\n    return (\r\n      <XYPlot margin={{bottom: 60}} xType=\"ordinal\" height={300} width={this.state.vWidth / 2}>\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <YAxis />\r\n        <XAxis tickLabelAngle={-50}/>\r\n        <VerticalBarSeries data={this.state.data} />\r\n      </XYPlot>\r\n    );\r\n  }\r\n\r\n  renderVisitsByMonth() {\r\n    if (!this.state.json) {\r\n      return null;\r\n    }\r\n    return (\r\n      <XYPlot margin={{bottom: 60}} xType=\"ordinal\" height={300} width={this.state.vWidth / 2}>\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <YAxis />\r\n        <XAxis />\r\n        <LineMarkSeries data={this.state.visitMonth} />\r\n      </XYPlot>\r\n    );\r\n  }\r\n\r\n  renderVisitsByWeek() {\r\n    if (!this.state.json) {\r\n      return null;\r\n    }\r\n    return (\r\n      <XYPlot margin={{bottom: 60}} xType=\"ordinal\" height={300} width={this.state.vWidth / 2}>\r\n        <VerticalGridLines />\r\n        <HorizontalGridLines />\r\n        <YAxis />\r\n        <XAxis tickLabelAngle={-50}/>\r\n        <LineMarkSeries data={this.state.visitWeek} />\r\n      </XYPlot>\r\n    );\r\n  }\r\n\r\n  renderEvents(events) {\r\n    return events.map((item, index) => {\r\n      const newDate = moment(item.timestamp).format(\"MMMM Do YYYY, h:mmA\");\r\n      const eventArray = item.eventType.split('=');\r\n      let eventType = '';\r\n      let eventTarget = '';\r\n      \r\n      switch(eventArray[0]) {\r\n        case 'sessionStart':\r\n          eventType = 'Started Session';\r\n          break;\r\n        case 'linkVisit':\r\n          eventType = 'Viewed ';\r\n          break;\r\n        case 'navTo':\r\n          eventType = 'Navigated to ';\r\n          break;\r\n        default:\r\n          eventType = 'Unknown Event';\r\n      }\r\n\r\n      if (eventArray[1]) {\r\n        eventTarget = eventArray[1];\r\n      }\r\n\r\n      return(\r\n        <ListGroup.Item key={index}>\r\n          <p className=\"event-desc\">{eventType + eventTarget}: {newDate}</p>\r\n        </ListGroup.Item> \r\n      );\r\n    })\r\n  }\r\n\r\n  // To make login persistent, use localStorage/sessionStorage\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const authObj = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    }\r\n\r\n    fetch('https://ec2.kevnchoi.com/analytics/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(authObj)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.status === 'Authenticated') {\r\n        this.setState({ authMessage: '' });\r\n        localStorage.setItem('auth', true);\r\n      } else {\r\n        this.setState({\r\n          authMessage: res.status\r\n        });\r\n      }\r\n    })\r\n    .catch(err => console.log('Error: ' + err));\r\n  }\r\n\r\n  handlePasswordChange(e) {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  handleUsernameChange(e) {\r\n    this.setState({username: e.target.value});\r\n  }\r\n\r\n  renderAuth() {\r\n    return(\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control placeholder=\"Username\" onChange={this.handleUsernameChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePasswordChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n            {this.state.authMessage}\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n    \r\n  render() {\r\n    if (localStorage.getItem('auth')) {\r\n      return(\r\n        <div className=\"body-content\">\r\n          <Card>\r\n            <Card.Body>\r\n              <Tabs defaultActiveKey=\"events\">\r\n                <Tab eventKey=\"events\" title=\"Events\">\r\n                  <div className=\"accordion\">\r\n                    <h4 className=\"event-header\">\r\n                      <Badge variant=\"secondary\">\r\n                        Total Visits: {this.state.totalVisits}\r\n                      </Badge>\r\n                      <div className=\"reverse\">\r\n                        <Button\r\n                          variant=\"outline-primary\"\r\n                          style={{ height: 30, width: 30, padding: 0 }}\r\n                          onClick={() => this.reverseOrder()}\r\n                        >\r\n                          {this.renderReverseButton()}\r\n                        </Button>\r\n                      </div>\r\n                    </h4>\r\n                    <Accordion>\r\n                      {this.renderMetricsCards()}\r\n                    </Accordion>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"charts\" title=\"Charts\">\r\n                  <div className=\"charts\">\r\n                    <Card.Title>\r\n                      Visits by Event Type\r\n                    </Card.Title>\r\n                    {this.renderChart()}\r\n                    <Card.Title>\r\n                      Visits by Month\r\n                    </Card.Title>\r\n                    {this.renderVisitsByMonth()}\r\n                    <Card.Title>\r\n                      Visits by Week\r\n                    </Card.Title>\r\n                    {this.renderVisitsByWeek()}\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        <div className=\"body-content\">\r\n          {this.renderAuth()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Body;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Body from './components/Body';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Header />\r\n        <Body />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}