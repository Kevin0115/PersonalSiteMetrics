{"version":3,"sources":["components/Header.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","externalLinks","link","label","Body","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","totalVisits","sessionIds","metricsById","reverseOrder","pageOffset","visitsByEvent","visitsByMonth","visitsByWeek","visitsByDay","sortPeriod","username","password","authMessage","vWidth","bind","assertThisInitialized","renderEvents","renderMetricsCards","handleResize","handlePeriodSelect","window","addEventListener","fetchSessionIds","fetchVisitsByEvent","setState","innerWidth","_this2","fetch","then","res","json","length","catch","err","console","log","id","_this3","obj","events","_this4","event_count","month_count","week_count","day_count","reverse","_this5","slice","map","item","index","Card","bg","style","width","key","height","padding","Accordion","Toggle","as","Button","variant","eventKey","toString","onClick","fetchMetricsForId","session_id","Badge","moment","ts","utcOffset","format","Collapse","ListGroup","newDate","eventArray","event_type","split","eventType","eventTarget","Item","href","rel","target","domain","findMax","es","margin","bottom","top","xType","yDomain","tickLabelAngle","data","e","value","Math","max","apply","toConsumableArray","o","y","concat","_this6","pages","pageCount","ceil","push","Pagination","First","_loop","i","active","Last","_this7","Tabs","defaultActiveKey","Tab","title","renderReverseButton","renderRefreshButton","renderPagination","Title","renderChart","ButtonGroup","renderVisitsByPeriod","renderLinks","App","components_Header","components_Body","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53a5df7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-content\">\r\n        <h1>Site Metrics</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Accordion, Card, ListGroup, Button, ButtonGroup, Tabs, Tab, Badge, Pagination } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { XYPlot, VerticalBarSeries, VerticalGridLines, HorizontalGridLines,\r\n  YAxis, XAxis, LineMarkSeries } from 'react-vis';\r\nimport '../App.css';\r\n\r\nconst externalLinks = [\r\n  {\r\n    link: 'https://kevinchoi.dev',\r\n    label: 'Personal Site'\r\n  },\r\n  {\r\n    link: 'https://github.com/Kevin0115/PersonalSiteMetrics',\r\n    label: 'Github'\r\n  },\r\n  {\r\n    link: 'https://customer.elephantsql.com/instance',\r\n    label: 'Database'\r\n  },\r\n  {\r\n    link: 'https://react-bootstrap.github.io/components/alerts/',\r\n    label: 'React Bootstrap'\r\n  },\r\n  {\r\n    link: 'https://uber.github.io/react-vis/',\r\n    label: 'React-Vis'\r\n  }\r\n];\r\n\r\nclass Body extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // NEW\r\n      totalVisits: 0,\r\n      sessionIds: [],\r\n      metricsById: {},\r\n      reverseOrder: false,\r\n      pageOffset: 0,\r\n      // NEW - Chart Arrays\r\n      visitsByEvent: [],\r\n      visitsByMonth: [],\r\n      visitsByWeek: [],\r\n      visitsByDay: [],\r\n      sortPeriod: 'Monthly',\r\n\r\n      // OLD\r\n      username: '',\r\n      password: '',\r\n      authMessage: '',\r\n      vWidth: 0,\r\n    }\r\n    this.reverseOrder = this.reverseOrder.bind(this);\r\n    this.renderEvents = this.renderEvents.bind(this);\r\n    this.renderMetricsCards = this.renderMetricsCards.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.handlePeriodSelect = this.handlePeriodSelect.bind(this);\r\n    // Auth stuff\r\n    // this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    // this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleResize();\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.fetchSessionIds();\r\n    this.fetchVisitsByEvent();\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({vWidth: window.innerWidth});\r\n  }\r\n\r\n  fetchSessionIds() {\r\n    fetch('https://ec2.kevnchoi.com/metric')\r\n    // fetch('http://localhost:8080/metric')\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      this.setState({\r\n        sessionIds: json,\r\n        totalVisits: json.length,\r\n        metricsById: {}\r\n      });\r\n    })\r\n    .catch(err => console.log('Error: ' + err));\r\n  }\r\n\r\n  fetchMetricsForId(id) {\r\n    // 'Caching' for this session\r\n    if (id in this.state.metricsById) {\r\n      return;\r\n    }\r\n    fetch('https://ec2.kevnchoi.com/metric/session/' + id)\r\n    // fetch('http://localhost:8080/metric/session/' + id)\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      // Make K-V pair\r\n      const obj = {\r\n        events: json\r\n      };\r\n      // Get current state\r\n      const { metricsById } = this.state;\r\n      metricsById[id] = obj;\r\n      this.setState({\r\n        metricsById: metricsById\r\n      });\r\n    })\r\n    .catch(err => console.log('Error: ' + err));\r\n  }\r\n\r\n  fetchVisitsByEvent() {\r\n    fetch('https://ec2.kevnchoi.com/metric/chart')\r\n    // fetch('http://localhost:8080/metric/chart')\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      this.setState({\r\n        visitsByEvent: json.event_count,\r\n        visitsByMonth: json.month_count,\r\n        visitsByWeek: json.week_count,\r\n        visitsByDay: json.day_count,\r\n      });\r\n    })\r\n    .catch(err => console.log('Error: ' + err));\r\n  }\r\n\r\n  reverseOrder() {\r\n    this.setState({\r\n      sessionIds: this.state.sessionIds.reverse(),\r\n      reverseOrder: !this.state.reverseOrder\r\n    });\r\n  }\r\n\r\n  renderReverseButton() {\r\n    return this.state.reverseOrder ?\r\n      ( <div>&#x21a5;</div> ) : ( <div>&#x21a7;</div> )\r\n  }\r\n\r\n  renderRefreshButton() {\r\n    return (\r\n      <div>&#8635;</div>\r\n    );\r\n  }\r\n\r\n  renderMetricsCards() {\r\n    if (!this.state.sessionIds) {\r\n      return null;\r\n    }\r\n    return this.state.sessionIds.slice(0 + this.state.pageOffset * 10, 10 + this.state.pageOffset * 10).map((item, index) => {\r\n      return (\r\n        <Card bg=\"light\" style={{ width: '60vw' }} key={index}>\r\n          <Card.Header className=\"header\" style={{ height: '36px', padding: '2px 4px' }}>\r\n            <Accordion.Toggle style={{ padding: '2px' }} as={Button} variant=\"link\" eventKey={index.toString()} onClick={() => this.fetchMetricsForId(item.session_id)}>\r\n              <Badge variant=\"primary\" className=\"event-count\">{item.event_count}</Badge>\r\n              {moment(item.ts).utcOffset(-8).format('MMM D, YYYY')}\r\n            </Accordion.Toggle>\r\n            <div className=\"session-id\">{item.session_id}</div>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey={index.toString()}>\r\n            <ListGroup>{this.renderEvents(item.session_id)}</ListGroup>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n  }\r\n\r\n  renderEvents(session_id) {\r\n    if (!this.state.metricsById[session_id]) {\r\n      return;\r\n    }\r\n    const { events } = this.state.metricsById[session_id];\r\n\r\n    return events.map((item, index) => {\r\n      const newDate = moment(item.ts).utcOffset(-8).format(\"YYYY-MM-DD, h:mm A\");\r\n      const eventArray = item.event_type.split('=');\r\n      let eventType = '';\r\n      let eventTarget = '';\r\n      \r\n      switch(eventArray[0]) {\r\n        case 'sessionStart':\r\n          eventType = 'Started Session';\r\n          break;\r\n        case 'linkVisit':\r\n          eventType = 'Viewed ';\r\n          break;\r\n        case 'navTo':\r\n          eventType = 'Navigated to ';\r\n          break;\r\n        default:\r\n          eventType = 'Unknown Event';\r\n      }\r\n\r\n      if (eventArray[1]) {\r\n        eventTarget = eventArray[1];\r\n      }\r\n\r\n      return(\r\n        <ListGroup.Item key={index}>\r\n          <p className=\"event-desc\">{eventType + eventTarget}: {newDate}</p>\r\n        </ListGroup.Item> \r\n      );\r\n    })\r\n  }\r\n\r\n  renderLinks() {\r\n    return externalLinks.map((item, index) => {\r\n      return (\r\n        <a\r\n          key={index}\r\n          href={item.link}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          <Button variant=\"outline-secondary\" className=\"link-item\">\r\n            {item.label}\r\n          </Button>\r\n        </a>\r\n      );\r\n    })\r\n  }\r\n\r\n  renderChart() {\r\n    if (!this.state.visitsByEvent) {\r\n      return null;\r\n    }\r\n    let domain = [0, this.findMax(this.state.visitsByEvent)];\r\n    return (\r\n      <div className=\"chart\">\r\n        <XYPlot margin={{bottom: 100, top: 32}} xType=\"ordinal\" height={400} width={this.state.vWidth / 1.8} yDomain={domain}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <YAxis />\r\n          <XAxis tickLabelAngle={-45}/>\r\n          <VerticalBarSeries data={this.state.visitsByEvent} />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderVisitsByPeriod() {\r\n    let data = [];\r\n    let domain = [];\r\n    switch(this.state.sortPeriod) {\r\n      case ('Weekly') :\r\n        data = this.state.visitsByWeek;\r\n        domain = [0, this.findMax(data)];\r\n        break;\r\n      case ('Daily') :\r\n        data = this.state.visitsByDay;\r\n        domain = [0, this.findMax(data)];\r\n        break;\r\n      default :\r\n        data = this.state.visitsByMonth;\r\n        domain = [0, this.findMax(data)];\r\n    }\r\n\r\n    if (!data) return null;\r\n    return (\r\n      <div className=\"chart\">\r\n        <XYPlot margin={{bottom: 56, top: 32}} xType=\"ordinal\" height={360} width={this.state.vWidth / 1.8} yDomain={domain}>\r\n          <VerticalGridLines />\r\n          <HorizontalGridLines />\r\n          <YAxis />\r\n          <XAxis tickLabelAngle={-45} />\r\n          <LineMarkSeries data={data} />\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  handlePeriodSelect(e) {\r\n    this.setState({sortPeriod: e.target.value});\r\n  }\r\n\r\n  findMax(data) {\r\n    if (!data) return 0;\r\n    return Math.max(...data.map(o => o.y), 0) * 1.25;\r\n  }\r\n\r\n  renderPagination() {\r\n    if (this.state.totalVisits <= 10) return null;\r\n    let pages = [];\r\n    let pageCount = Math.ceil(this.state.totalVisits / 10);\r\n    pages.push(<Pagination.First key={'first'} onClick={() => this.setState({pageOffset: 0})}/>);\r\n    for (let i = 0; i < pageCount; i++) {\r\n      pages.push(\r\n        <Pagination.Item key={i} onClick={() => this.setState({pageOffset: i})} active={this.state.pageOffset === i}>\r\n          {i + 1}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    pages.push(<Pagination.Last key={'last'} onClick={() => this.setState({pageOffset: pageCount - 1})}/>);\r\n    return pages;\r\n  }\r\n\r\n  // To make login persistent, use localStorage/sessionStorage\r\n  // handleSubmit(e) {\r\n  //   e.preventDefault();\r\n\r\n  //   const authObj = {\r\n  //     username: this.state.username,\r\n  //     password: this.state.password\r\n  //   }\r\n\r\n  //   fetch('https://ec2.kevnchoi.com/analytics/login', {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json'\r\n  //     },\r\n  //     body: JSON.stringify(authObj)\r\n  //   })\r\n  //   .then(res => res.json())\r\n  //   .then(res => {\r\n  //     if (res.status === 'Authenticated') {\r\n  //       this.setState({ authMessage: '' });\r\n  //       localStorage.setItem('auth', true);\r\n  //     } else {\r\n  //       this.setState({\r\n  //         authMessage: res.status\r\n  //       });\r\n  //     }\r\n  //   })\r\n  //   .catch(err => console.log('Error: ' + err));\r\n  // }\r\n\r\n  // handlePasswordChange(e) {\r\n  //   this.setState({password: e.target.value});\r\n  // }\r\n\r\n  // handleUsernameChange(e) {\r\n  //   this.setState({username: e.target.value});\r\n  // }\r\n\r\n  // renderAuth() {\r\n  //   return(\r\n  //     <Form onSubmit={this.handleSubmit}>\r\n  //       <Form.Group controlId=\"formBasicEmail\">\r\n  //         <Form.Control placeholder=\"Username\" onChange={this.handleUsernameChange}/>\r\n  //       </Form.Group>\r\n  //       <Form.Group controlId=\"formBasicPassword\">\r\n  //         <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.handlePasswordChange}/>\r\n  //         <Form.Text className=\"text-muted\">\r\n  //           {this.state.authMessage}\r\n  //         </Form.Text>\r\n  //       </Form.Group>\r\n  //       <Button variant=\"outline-primary\" type=\"submit\">\r\n  //         Submit\r\n  //       </Button>\r\n  //     </Form>\r\n  //   );\r\n  // }\r\n    \r\n  render() {\r\n    // if (localStorage.getItem('auth')) {\r\n      return(\r\n        <div className=\"body-content\">\r\n          <Card>\r\n            <Card.Body>\r\n              <Tabs defaultActiveKey=\"events\">\r\n                <Tab eventKey=\"events\" title=\"Events\">\r\n                  <div className=\"event-list\">\r\n                    <h4 className=\"event-header\">\r\n                      <Badge variant=\"secondary\">\r\n                        Total Visits: {this.state.totalVisits}\r\n                      </Badge>\r\n                      <div className=\"reverse\">\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          style={{ height: 30, width: 30, padding: 0 }}\r\n                          onClick={() => this.reverseOrder()}\r\n                        >\r\n                          {this.renderReverseButton()}\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline-secondary\"\r\n                          style={{ height: 30, width: 30, padding: 0 }}\r\n                          onClick={() => this.fetchSessionIds()}\r\n                        >\r\n                          {this.renderRefreshButton()}\r\n                        </Button>\r\n                      </div>\r\n                    </h4>\r\n                    <Accordion>\r\n                      {this.renderMetricsCards()}\r\n                    </Accordion>\r\n                    <Pagination className=\"pagination\">\r\n                      {this.renderPagination()}\r\n                    </Pagination>\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"event-chart\" title=\"Chart (Events)\">\r\n                  <div className=\"charts\">\r\n                    <Card.Title>\r\n                      Visits by Event Type\r\n                    </Card.Title>\r\n                    {this.renderChart()}\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"period-chart\" title=\"Chart (Time)\">\r\n                  <div className=\"charts\">\r\n                    <Card.Title>\r\n                      {this.state.sortPeriod} Visits\r\n                    </Card.Title>\r\n                    <ButtonGroup className=\"period-select\">\r\n                      <Button\r\n                        variant={this.state.sortPeriod === \"Monthly\" ? \"primary\" : \"secondary\"}\r\n                        onClick={this.handlePeriodSelect}\r\n                        value=\"Monthly\">Monthly</Button>\r\n                      <Button\r\n                        variant={this.state.sortPeriod === \"Weekly\" ? \"primary\" : \"secondary\"}\r\n                        onClick={this.handlePeriodSelect}\r\n                        value=\"Weekly\">Weekly</Button>\r\n                      <Button\r\n                        variant={this.state.sortPeriod === \"Daily\" ? \"primary\" : \"secondary\"}\r\n                        onClick={this.handlePeriodSelect}\r\n                        value=\"Daily\">Daily</Button>\r\n                    </ButtonGroup>\r\n                    {this.renderVisitsByPeriod()}\r\n                  </div>\r\n                </Tab>\r\n                <Tab eventKey=\"links\" title=\"Links\">\r\n                  <div className=\"links\">\r\n                    {this.renderLinks()}\r\n                  </div>\r\n                </Tab>\r\n              </Tabs>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      );\r\n    // } else {\r\n    //   return(\r\n    //     <div className=\"body-content\">\r\n    //       {this.renderAuth()}\r\n    //     </div>\r\n    //   );\r\n    // }\r\n  }\r\n}\r\n\r\nexport default Body;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './components/Header';\r\nimport Body from './components/Body';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-container\">\r\n        <Header />\r\n        <Body />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}